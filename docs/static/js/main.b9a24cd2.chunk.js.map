{"version":3,"sources":["components/Products/ModalEditProducts/index.jsx","components/Products/TableProducts/index.jsx","hooks/utils.jsx","components/Products/ModalCreateProducts/index.jsx","components/Products/index.jsx","view/Products/index.jsx","components/NOrders/index.jsx","components/Order/UpdateOrderTable/index.jsx","components/Select/index.jsx","components/SelectMultiple/index.jsx","components/Order/UpdateAddProduct/index.jsx","components/Order/UpdateOrder/index.jsx","components/Order/TableOrders/index.jsx","components/Order/TableProductCheck/index.jsx","components/Order/TableProductsFilter/index.jsx","components/Order/CreateOrder/index.jsx","components/Order/index.jsx","view/Orders/index.jsx","components/Header/index.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["ModalEditProducts","data","React","useState","open","setOpen","handleClose","useEffect","console","log","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","name","category","priceUnit","status","DialogActions","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","useStyles","makeStyles","root","width","container","maxHeight","TableInterface","rows","classes","page","setPage","rowsPerPage","setRowsPerPage","Paper","className","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","length","slice","row","indexRow","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","target","baseUrl","getAllOrders","a","axios","url","method","response","result","Order","getProducts","getCategoryProducts","Product","ModalCreateProducts","setRows","addProduct","newProduct","validateProduct","createProduct","then","finally","clearProduct","idProduct","idCategory","auxProduct","setauxProduct","nameAux","idProductAux","categoryAux","priceUnitAux","statusAux","listCategory","setlistCategory","TextField","autoFocus","margin","type","onChange","e","fullWidth","FormControl","InputLabel","Select","labelId","MenuItem","index","Products","isMobile","useMediaQuery","theme","breakpoints","down","Grid","justify","item","Link","to","Typography","marginLeft","modal","position","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","top","left","transform","iconos","cursor","inputMaterial","createData","calories","fat","carbs","protein","BasicTable","productsRows","setQuantity","setQuantityCost","setMode","handleChange","parseInt","parseFloat","handleClickCancel","sx","scope","min","step","disabled","mode","amount","forEach","SelectAutoWidth","title","list","setItemSelected","age","setAge","m","MenuProps","PaperProps","ITEM_HEIGHT","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelectChip","setlistCategorySelected","useTheme","setPersonName","multiple","split","input","OutlinedInput","renderValue","selected","Box","display","flexWrap","gap","Chip","AddProduct","listProducts","setProducts","listCategorySelecteds","itemProductSelecteds","total","setTotal","quantity","price","setPrice","getListProducts","i","element","nameCategory","numberProduct","array","push","Object","keys","orderSave","idOrder","handleClickSave","UpdateOrder","setpageNumber","order","moment","Date","date","dateInput","setDateInput","client","clientInput","setClientInput","maxWidth","htmlFor","Input","placeholder","TableOrders","setOrderSelected","field","headerName","DataTable","setRowsSelection","rowsSelection","height","pageSize","disableColumnResize","checkboxSelection","selectionModel","onSelectionModelChange","rowsSelectionAux","setRowsSelectionAux","b","toString","cost","arrayAux","arrayAuxCheck","handleClickDelete","CreateOrder","handleClickComplete","orderSend","amountTotal","taxesAmount","taxesTotal","createOrders","fullScreen","Orders","useHistory","listOrders","setStateListOrder","pageNumber","orderSelected","name1","name2","name3","name4","textAlign","flexGrow","menuButton","marginRight","HideOnScroll","props","children","trigger","useScrollTrigger","Slide","appear","direction","in","Header","anchor","setAnchor","Boolean","basename","AppBar","Toolbar","IconButton","edge","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","KeepMounted","transformOrigin","ListItemIcon","exact","path","App","createMuiTheme","h1","fontSize","primary","main","secondary","ThemeProvider","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9a24cd2.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ModalEditProducts({ data }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"DATA\", data);\r\n  }, [0]);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Product</DialogTitle>\r\n        <DialogContent>\r\n          <p>Name: {data.name}</p>\r\n          <p>Category: {data.category.name}</p>\r\n          <p>Price: {data.priceUnit}</p>\r\n          <p>Status: {(data.status === 1) ? \"Active\" : \"Inactive\"}</p>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ModalEditProducts from '../ModalEditProducts';\r\n\r\nconst columns = [\r\n  { id: 'idProduct', label: 'Nro.', minWidth: 50 },\r\n  { id: 'name', label: 'Name', minWidth: 50 },\r\n  {\r\n    id: 'category',\r\n    label: 'Category',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'priceUnit',\r\n    label: 'Price',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'status',\r\n    label: 'Status',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value,\r\n  },\r\n  {\r\n    id: 'actions',\r\n    label: 'Actions',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function TableInterface({ rows }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {(rows.length>0)?rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, indexRow) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      (column.id === \"actions\")? \r\n                          <TableCell key={column.id} align={column.align}>\r\n                            <ModalEditProducts data={ row }/>\r\n                          </TableCell>\r\n                      :(column.id === \"idProduct\")? \r\n                      <TableCell key={column.id} align={column.align}>\r\n                        { indexRow+1 }\r\n                      </TableCell>\r\n                      :(column.id === \"category\")?\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            { value.name }\r\n                          </TableCell>\r\n                      :(column.id === \"status\")?\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            { (column.format(value)===1)?\"Active\":\"Inactive\"}\r\n                          </TableCell>\r\n                          :<TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                          </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            }):<span>No hay datos</span>}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\n//https://github.com/axios/axios\r\n\r\nconst baseUrl = \"https://apch-service-crud.herokuapp.com/api\";\r\n\r\nexport async function getAllOrders (){\r\n  try{\r\n    const response = await axios ({\r\n      url:`${baseUrl}/order/find-all-order`,\r\n      method: 'GET'\r\n    })\r\n    return (response.status===200)?response.data.result:[];;\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport async function createOrders (Order){\r\n  try{\r\n    const response = await axios ({\r\n      url:`${baseUrl}/order/create-order`,\r\n      method: 'POST',\r\n      data: Order\r\n    })\r\n\r\n    return (response.status===200)?response.data.result:null;\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport async function getProducts (){\r\n  try{\r\n    const response = await axios ({\r\n      url:`${baseUrl}/product/find-all-product`,\r\n      method: 'GET'\r\n    })\r\n    // console.log(\"RESPONSE\",response.data.result);\r\n    return (response.status===200)?response.data.result:[];\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport async function getCategoryProducts (){\r\n  try{\r\n    const response = await axios ({\r\n      url:`${baseUrl}/category/find-all`,\r\n      method: 'GET'\r\n    })\r\n    // console.log(\"RESPONSE\",response.data.result);\r\n    return (response.status===200)?response.data.result:[];\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport async function createProduct (Product){\r\n  try{\r\n    console.log(Product);\r\n    const response = await axios ({\r\n      url:`${baseUrl}/product/create-product`,\r\n      method: 'POST',\r\n      data: Product\r\n    })\r\n\r\n    return (response.status===200)?response.data.result:null;\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n//////////////////////////////////////\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { createProduct, getCategoryProducts } from '../../../hooks/utils';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport \"./ModalCreateProducts.scss\";\r\n\r\nexport default function ModalCreateProducts({ setRows }) {\r\n\r\n    const [open, setOpen] = React.useState( false );\r\n\r\n    const handleClickOpen = () => setOpen(true);\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const addProduct = (newProduct) => {\r\n        console.log(\"NUEVO\",newProduct);\r\n        if(!validateProduct(newProduct)) {\r\n            console.log(\"NO VALIDOO\");\r\n            return;\r\n        }\r\n        createProduct({...newProduct, status: 1}).then((value) => {\r\n            if(value!=null) {\r\n                setRows((rows) => (\r\n                    [...rows, value]\r\n                ));\r\n            }\r\n        }).finally( ()=> {\r\n            clearProduct();\r\n            handleClose();\r\n        });\r\n    }\r\n\r\n    const validateProduct = ({ idProduct, name, category, priceUnit, status }) => {\r\n        console.log(name,category.name,priceUnit);\r\n        if(\r\n            name!=\"\" &&\r\n            category.name!=\"\" &&\r\n            priceUnit!=\"\"\r\n        ){\r\n            return true;\r\n        }else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const [auxProduct, setauxProduct] = useState({\r\n        idProduct: '',\r\n        name: \"\",\r\n        category: {\r\n            idCategory: \"\",\r\n            name: \"\",\r\n            status: \"\"\r\n        },\r\n        priceUnit: '',\r\n        status: \"\"\r\n    });\r\n\r\n    const {idProductAux, nameAux, categoryAux, priceUnitAux, statusAux} = auxProduct;\r\n    // const {idCategoryAux , nameCategoryAux, statusCategoryAux }  = categoryAux;\r\n\r\n    const clearProduct = () => {\r\n        setauxProduct({\r\n            idProduct: '',\r\n            name: \"\",\r\n            category: {\r\n                idCategory: \"\",\r\n                name: \"\",\r\n                status: \"\"\r\n            },\r\n            priceUnit: '',\r\n            status: \"\"\r\n        });\r\n    };\r\n\r\n    const [listCategory, setlistCategory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCategoryProducts().then( value => {\r\n            setlistCategory(value);\r\n        });\r\n    }, [listCategory.length])\r\n\r\n    const listStatus = [{label: \"Activo\", value: 1 }, {label: \"Inactivo\", value: 0}];\r\n\r\n  return (\r\n    <div className=\"left-button\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} >\r\n            Create Product\r\n        </Button>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Add Product</DialogTitle>\r\n            <DialogContent>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                value={ nameAux }\r\n                onChange= { (e)=>setauxProduct({ ...auxProduct, name: e.target.value }) }\r\n                fullWidth\r\n            />\r\n            <FormControl fullWidth >\r\n                <InputLabel id=\"demo-simple-select-autowidth-label\">Category</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={ categoryAux }\r\n                    onChange={ (e) => setauxProduct({...auxProduct, category: e.target.value}) }\r\n                    label=\"Category\"\r\n                    >\r\n                    {\r\n                        listCategory.map(category => {\r\n                            return (\r\n                                <MenuItem key={category.idCategory} value={ category }>\r\n                                    <em>{ category.name }</em>\r\n                                </MenuItem>\r\n                            );\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"price\"\r\n                label=\"Unit Price\"\r\n                type=\"number\"\r\n                value={ priceUnitAux }\r\n                onChange= { (e)=>setauxProduct({ ...auxProduct, priceUnit: e.target.value }) }\r\n                fullWidth\r\n            />\r\n            <FormControl fullWidth >\r\n                <InputLabel id=\"demo-simple-select-autowidth-label\">Status</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={ statusAux }\r\n                    onChange={ (e) => setauxProduct({...auxProduct, status: e.target.value.value}) }\r\n                    label=\"Status\"\r\n                    >\r\n                    {\r\n                        listStatus.map((status, index) => {\r\n                            return (\r\n                                <MenuItem key={ index } value={ status.value }>\r\n                                    <em>{ status.label }</em>\r\n                                </MenuItem>\r\n                            );\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button onClick={(e)=> addProduct(auxProduct) } color=\"primary\">\r\n                Add\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TableInterface from \"./TableProducts\";\r\nimport { Modal, useMediaQuery, Button } from \"@material-ui/core\";\r\nimport { getProducts } from \"../../hooks/utils\"\r\nimport ModalCreateProducts from \"./ModalCreateProducts\";\r\n\r\nconst Products = () => {\r\n  // const isMobile = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n  const view = React.useState(1);\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProducts().then( (value) => {\r\n      console.log(\"VALUE PRODUCTS\", value);\r\n      setRows(value);\r\n    });\r\n  }, [rows.length])\r\n\r\n\r\n  return (\r\n    <>\r\n      <ModalCreateProducts setRows={ setRows } />\r\n      <TableInterface rows={ rows } />\r\n      {/* <Box py={20} textAlign=\"center\">\r\n          <Typography variant=\"h2\">Orders Page</Typography>\r\n        </Box> */}\r\n    </>\r\n  );\r\n};\r\nexport default Products;\r\n","import React from 'react';\nimport {\n  Box,\n  Typography,\n  useMediaQuery,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\nimport ProductComponent from \"../../components/Products\";\nimport \"./Product.scss\";\n\nconst Products = () => {\n  const isMobile = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n\n  return (\n    <>\n      <div className= \"table__title\"> Products </div>\n\n      <ProductComponent className=\"title-table\"/>\n      {/* <Box py={20} textAlign=\"center\">\n        <Typography variant=\"h2\">Products Page</Typography>\n      </Box> */}\n      {isMobile ? (\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={Link}\n              to=\"/Products\"\n            >\n              <ChevronLeftIcon />\n              <Typography variant=\"button\">Orders</Typography>\n              <SchoolIcon style={{ marginLeft: 15 }} />\n            </Button>\n          </Grid>\n          {/* <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component={Link}\n              to=\"/Personal\"\n            >\n              <BookmarksIcon style={{ marginRight: 15 }} />\n              <Typography variant=\"button\">Personal</Typography>\n              <ChevronRightIcon />\n            </Button>\n          </Grid> */}\n        </Grid>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default Products;","import React, { Component, useEffect, useState } from \"react\";\nimport { getAllOrders } from '../../hooks/utils'\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableContainer, TableHead, TableCell, TableBody, TableRow, Modal, Button, TextField } from '@material-ui/core';\nimport { Edit, Delete } from '@material-ui/icons';\nimport \"./NOrders.scss\";\n\nconst baseUrl = \"https://apch-service-crud.herokuapp.com/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  iconos: {\n    cursor: 'pointer'\n  },\n  inputMaterial: {\n    width: '100%'\n  }\n}));\n\nconst NOrders = () => {\n\n  const styles = useStyles();\n\n  const [data, setData] = useState([]);\n  const [modalInsertar, setModalInsertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n\n  const [consolaSeleccionada, setConsolaSeleccionada] = useState(\n    {\n      \"amountTotal\": 0,\n      \"client\": \"ALEXANDERS PRADO\",\n      \"date\": \"2021/09/15\",\n      \"id\": 1,\n      \"listProducts\": [\n        {\n          \"amount\": 5,\n          \"category\": {\n            \"idCategory\": \"1\",\n            \"name\": \"GALLETA\",\n            \"status\": \"STOCK\"\n          },\n          \"idProduct\": 1,\n          \"name\": \"SODA\",\n          \"priceUnit\": 2.5,\n          \"status\": 1\n        }\n      ],\n      \"orderNumber\": \"001\",\n      \"status\": 1,\n      \"taxesAmount\": 20.4,\n      \"taxesTotal\": 15.2\n    })\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setConsolaSeleccionada(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n    console.log(consolaSeleccionada);\n  }\n\n  const peticionGet = async () => {\n    await axios.get(baseUrl)\n      .then(response => {\n        setData(response.data);\n      })\n  }\n\n  const peticionPost = async () => {\n    await axios.post(baseUrl, consolaSeleccionada)\n      .then(response => {\n        setData(data.concat(response.data))\n        abrirCerrarModalInsertar()\n      })\n  }\n  ////\n  const peticionDelete = async () => {\n    await axios.delete(baseUrl + consolaSeleccionada.id)\n      .then(response => {\n        setData(data.filter(consola => consola.id !== consolaSeleccionada.id));\n        abrirCerrarModalEliminar();\n      })\n  }\n\n  const peticionPut = async () => {\n    await axios.put(baseUrl + consolaSeleccionada.id, consolaSeleccionada)\n      .then(response => {\n        var dataNueva = data;\n        dataNueva.map(consola => {\n          if (consolaSeleccionada.id === consola.id) {\n            consola.nombre = consolaSeleccionada.nombre;\n            consola.lanzamiento = consolaSeleccionada.lanzamiento;\n            consola.empresa = consolaSeleccionada.empresa;\n            consola.unidades_vendidas = consolaSeleccionada.unidades_vendidas;\n          }\n        })\n        setData(dataNueva);\n        abrirCerrarModalEditar();\n      })\n  }\n\n\n  useEffect(() => {\n    getAllOrders().then((value) => {\n      console.log(\"VALUE Orders\", value);\n      setData(value);\n    });\n  }, [])\n\n\n  const abrirCerrarModalInsertar = () => {\n    setModalInsertar(!modalInsertar);\n  }\n\n  const abrirCerrarModalEditar = () => {\n    setModalEditar(!modalEditar);\n  }\n  /////\n  const abrirCerrarModalEliminar = () => {\n    setModalEliminar(!modalEliminar);\n  }\n\n  const seleccionarConsola = (consola, caso) => {\n    setConsolaSeleccionada(consola);\n    (caso === 'Editar') ? abrirCerrarModalEditar() : abrirCerrarModalEliminar()\n  }\n\n  const bodyInsertar = (\n    <div className={styles.modal}>\n      <h3>Agregar Nueva Consola</h3>\n      <TextField name=\"nombre\" className={styles.inputMaterial} label=\"Nombre\" onChange={handleChange} />\n      <br />\n      <TextField name=\"empresa\" className={styles.inputMaterial} label=\"Empresa\" onChange={handleChange} />\n      <br />\n      <TextField name=\"lanzamiento\" className={styles.inputMaterial} label=\"Lanzamiento\" onChange={handleChange} />\n      <br />\n      <TextField name=\"unidades_vendidas\" className={styles.inputMaterial} label=\"Unidades Vendidas\" onChange={handleChange} />\n      <br /><br />\n      <div align=\"right\">\n        <Button color=\"primary\" onClick={() => peticionPost()}>Insertar</Button>\n        <Button onClick={() => abrirCerrarModalInsertar()}>Cancelar</Button>\n      </div>\n    </div>\n  )\n\n  const bodyEditar = (\n    <div className={styles.modal}>\n      <h3>Editar Consola</h3>\n      <TextField name=\"nombre\" className={styles.inputMaterial} label=\"Nombre\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.nombre} />\n      <br />\n      <TextField name=\"empresa\" className={styles.inputMaterial} label=\"Empresa\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.empresa} />\n      <br />\n      <TextField name=\"lanzamiento\" className={styles.inputMaterial} label=\"Lanzamiento\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.lanzamiento} />\n      <br />\n      <TextField name=\"unidades_vendidas\" className={styles.inputMaterial} label=\"Unidades Vendidas\" onChange={handleChange} value={consolaSeleccionada && consolaSeleccionada.unidades_vendidas} />\n      <br /><br />\n      <div align=\"right\">\n        <Button color=\"primary\" onClick={() => peticionPut()}>Editar</Button>\n        <Button onClick={() => abrirCerrarModalEditar()}>Cancelar</Button>\n      </div>\n    </div>\n  )\n\n  const bodyEliminar = (\n    <div className={styles.modal}>\n      <p>Estás seguro que deseas eliminar la consola <b>{consolaSeleccionada && consolaSeleccionada.nombre}</b> ? </p>\n      <div align=\"right\">\n        <Button color=\"secondary\" onClick={() => peticionDelete()} >Sí</Button>\n        <Button onClick={() => abrirCerrarModalEliminar()}>No</Button>\n\n      </div>\n\n    </div>\n  )\n\n\n  return (\n    <>\n      <div className=\"App\">\n        <br />\n        <Button onClick={() => abrirCerrarModalInsertar()} >Add Order</Button>\n        <br /><br />\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Nro</TableCell>\n                <TableCell>Consumer</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {data.map(consola => (\n                <TableRow key={consola.id}>\n                  <TableCell>{consola.id}</TableCell>\n                  <TableCell>{consola.client}</TableCell>\n                  <TableCell>{consola.status}</TableCell>\n                  <TableCell>{consola.date}</TableCell>\n                  <TableCell>{consola.taxesAmount}</TableCell>\n                  <TableCell> edit\n                    <Edit className={styles.iconos} onClick={() => seleccionarConsola(consola, 'Editar')} />\n                    &nbsp;&nbsp;&nbsp;\n                    {/* <Delete  className={styles.iconos} onClick={()=>seleccionarConsola(consola, 'Eliminar')}/> */}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Modal\n          open={modalInsertar}\n          onClose={abrirCerrarModalInsertar}>\n          {bodyInsertar}\n        </Modal>\n\n        <Modal\n          open={modalEditar}\n          onClose={abrirCerrarModalEditar}>\n          {bodyEditar}\n        </Modal>\n\n        <Modal\n          open={modalEliminar}\n          onClose={abrirCerrarModalEliminar}>\n          {bodyEliminar}\n        </Modal>\n\n      </div>\n    </>\n  );\n}\n\nexport default NOrders;","import { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Paper, Button } from \"@material-ui/core\";\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function BasicTable({ productsRows, setRows }) {\r\n\r\n  const [quantity, setQuantity] = useState(0)\r\n  const [quantityCost, setQuantityCost] = useState()\r\n  const [mode, setMode] = useState(1)\r\n  console.log(\"recibed productsRows\", productsRows);\r\n  function handleChange(e) {\r\n    setQuantity(e.target.value);\r\n    setQuantityCost(e.target.id)\r\n\r\n    let a = parseInt(e.target.value)\r\n    let b = parseFloat(e.target.id)\r\n  }\r\n\r\n  const handleClickDelete = (id) => {\r\n    console.log(\"delete\", id);\r\n    let arrayAux = [];\r\n  }\r\n  const handleClickEdit = (id) => {\r\n    console.log(\"edit\", id);\r\n    productsRows.forEach((item) => {\r\n        if(item.idProduct == id){\r\n          console.log(\"editar row\");\r\n          item.mode=2;\r\n        }else {\r\n          item.mode=1;\r\n        }\r\n    })\r\n    setRows(productsRows);\r\n  }\r\n  const handleClickCancel = (id) => {\r\n    console.log(\"cancel\", id);\r\n    setMode(1);\r\n    let arrayAux = [];\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Nro</TableCell>\r\n            <TableCell align=\"right\">Name</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Unit Price</TableCell>\r\n            <TableCell align=\"right\">Cost</TableCell>\r\n            <TableCell align=\"center\">Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {productsRows.map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.idProduct}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.name}</TableCell>\r\n              <TableCell align=\"right\"><input type=\"number\" className=\"input-Quantity\" min=\"1\" step=\"1\"\r\n                disabled={(row.mode == 1 ? true : false)}\r\n                onChange={handleChange} name={row.id} id={row.priceUnit} /></TableCell>\r\n              <TableCell align=\"right\">${row.priceUnit.toFixed(1)}</TableCell>\r\n              <TableCell align=\"right\" >${row.amount.toFixed(1)}</TableCell>\r\n              <TableCell align=\"center\">\r\n                {(row.mode == 1) ? <><button className=\"btn btn-link\" onClick={(e) => handleClickEdit(row.idProduct)} >Edit</button>\r\n                  <button className=\"btn btn-link\" onClick={(e) => handleClickDelete(row.idProduct)} >Delete</button>\r\n                </> :\r\n                  <><button className=\"btn btn-link\" onClick={(e) => handleClickCancel(row.idProduct)} >Save</button>\r\n                    <button className=\"btn btn-link\" onClick={(e) => handleClickCancel(row.idProduct)} >Cancel</button></>}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import * as React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { FormControl } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport \"./Select.scss\"\r\n\r\nexport default function SelectAutoWidth({ title, list, setItemSelected }) {\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(\"seleccionado\",event.target.value);\r\n    setItemSelected(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"conteiner\">\r\n      <FormControl sx={{ m: 1, minWidth: 80 }}>\r\n        <InputLabel id=\"demo-simple-select-autowidth-label\">{title}</InputLabel>\r\n        <Select\r\n          className=\"conteiner-select-simple\"\r\n          labelId=\"demo-simple-select-autowidth-label\"\r\n          id=\"demo-simple-select-autowidth\"\r\n          value={age}\r\n          onChange={handleChange}\r\n          label={title}\r\n        >\r\n          {list.map(item => (\r\n            <MenuItem key={item.id} value={item}>{item.name}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport \"./SelectMultiple.scss\"\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelectChip({ title, list ,setlistCategorySelected }) {\r\n  console.log(\"list\", list);\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n    setlistCategorySelected(\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"conteiner\">\r\n      <FormControl sx={{ m: 1, width: 300 }}>\r\n        <InputLabel id=\"demo-multiple-chip-label\">{title}</InputLabel>\r\n        <Select\r\n          className=\"conteiner-select-multiple\"\r\n          labelId=\"demo-multiple-chip-label\"\r\n          id=\"demo-multiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<OutlinedInput id=\"select-multiple-chip\" label={title} />}\r\n          renderValue={(selected) => (\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} />\r\n              ))}\r\n            </Box>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {list.map((item) => (\r\n            <MenuItem\r\n              key={item.idCategory}\r\n              value={item.name}\r\n              style={getStyles(item, personName, theme)}\r\n            >\r\n              {item.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Select from \"../../Select\";\r\nimport SelectMultiple from \"../../SelectMultiple\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { getProducts, getCategoryProducts } from \"../../../hooks/utils\";\r\nimport \"./AddProduct.scss\"\r\n\r\nconst AddProduct = ({setOpen}) => {\r\n  const [listCategory, setlistCategory] = useState([]);\r\n  const [listProducts, setProducts] = useState([]);\r\n  const [listCategorySelecteds, setlistCategorySelected] = useState([]);\r\n  const [itemProductSelecteds, setItemSelected] = useState({});\r\n  const [total, setTotal] = useState(0);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [price, setPrice] = useState(0);\r\n  useEffect(() => {\r\n\r\n    getCategoryProducts().then(value => {\r\n      setlistCategory(value);\r\n    });\r\n    getListProducts();\r\n  }, []);\r\n  const getListProducts = () => {\r\n    getProducts().then((value) => {\r\n      console.log(\"VALUE PRODUCTS\", value);\r\n      let i = 100;\r\n      value.forEach((element) => {\r\n        element.nameCategory = element.category.name;\r\n        element.numberProduct = i;\r\n        element.id = i;\r\n        element.amount = 1;\r\n        i++;\r\n      });\r\n      setProducts(value);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    console.log(\"listCategorySelecteds\", listCategorySelecteds);\r\n    let array = []\r\n    if (listCategorySelecteds.length > 0) {\r\n      listCategory.forEach(item => {\r\n        listCategorySelecteds.forEach(element => {\r\n          if (element == item.name)\r\n            array.push(item.idCategory)\r\n        });\r\n      });\r\n    }\r\n    console.log(\"array \", array);\r\n  }, [listCategorySelecteds])\r\n  useEffect(() => {\r\n    console.log(\"listProductSelecteds\", itemProductSelecteds);\r\n    if (Object.keys(itemProductSelecteds).length > 0) {\r\n      setQuantity(1);\r\n      setPrice(itemProductSelecteds.priceUnit);\r\n      setTotal(itemProductSelecteds.priceUnit * 1);\r\n    }\r\n  }, [itemProductSelecteds])\r\n  const handleClickSave = () => {\r\n    let orderSave = new Object();\r\n    orderSave.idOrder = \"6147fa489bf95d307958b079\"\r\n    itemProductSelecteds.amount = quantity;\r\n    orderSave.listProducts = [itemProductSelecteds]\r\n    console.log(orderSave);\r\n  }\r\n  const handleClickCancel = () => {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"content-product\">\r\n        <div>\r\n          <h1>Add Product</h1>\r\n          <div className=\"select select-multiple my-3\">\r\n            < SelectMultiple title={\"Select category\"} list={listCategory} setlistCategorySelected={setlistCategorySelected} />\r\n          </div>\r\n          <div className=\"select select-unique mb-3\">\r\n            < Select title={\"Select product\"} list={listProducts} setItemSelected={setItemSelected} />\r\n          </div>\r\n          <div className=\"row my-2\">\r\n            <label className=\"col-2\">Price</label>\r\n            <label className=\"col-2\"><div>{price.toFixed(1)}</div></label>\r\n          </div>\r\n          <div className=\"row my-2\">\r\n            <label className=\"col-2\">Quantity</label>\r\n            <input className=\"col-2\" type=\"number\" value={quantity} onChange={(e) => { setTotal(e.target.value * price); setQuantity(e.target.value) }}></input>\r\n          </div>\r\n          <div className=\"row my-2\">\r\n            <label className=\"col-2\">Cost</label>\r\n            <label className=\"col-2\"><div>{total.toFixed(1)}</div></label>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button className=\"mx-2\" variant=\"contained\" onClick={() => { handleClickSave() }}>Save</Button>\r\n            <Button className=\"ml-2\" variant=\"outlined\" onClick={() => { handleClickCancel() }}>Cancel</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default AddProduct;","import React, { useEffect, useState } from \"react\";\r\nimport { useMediaQuery, Button } from \"@material-ui/core\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { getProducts } from \"../../../hooks/utils\";\r\nimport Stylos from \"./Update.scss\";\r\nimport UpdateOrderTable from \"../UpdateOrderTable\";\r\nimport AddProduct from \"../UpdateAddProduct\";\r\nimport moment from 'moment';\r\n\r\nfunction UpdateOrder({ setpageNumber, order }) {\r\n\r\n  const [dateInput, setDateInput] = useState(moment(new Date(order.date), \"YYYY/MM/DD\").format(\"YYYY-MM-DD\"));\r\n  const [clientInput, setClientInput] = useState(order.client);\r\n  const [open, setOpen] = useState(false);\r\n  const [maxWidth, setMaxWidth] = useState('sm');\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    order.listProducts.forEach(element => {\r\n      element.mode=1;\r\n    });\r\n    setRows(order.listProducts);\r\n  }, [])\r\n  useEffect(() => {\r\n    setClientInput(setClientInput)\r\n  }, [clientInput]);\r\n  useEffect(() => {\r\n    setDateInput(dateInput)\r\n  }, [dateInput]);\r\n\r\n  const handleClickBack = () => {\r\n    setpageNumber(0);\r\n  }\r\n\r\n  const handleClickComplete = () => {\r\n\r\n  }\r\n\r\n  const handleClickReject = () => {\r\n\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <div className=\"content-update\" >\r\n        <div className=\"titleOrder\">\r\n          <p className=\"h1 h1Title table__title\">Edit Order</p>\r\n        </div>\r\n\r\n        <div className=\"left-button\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={(e) => handleClickBack()}>Back\r\n          </Button>\r\n        </div>\r\n        <div className=\"customerDetails\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-25\">\r\n                <label htmlFor=\"fname\">Customer</label>\r\n              </div>\r\n              <div className=\"col-75\">\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"fname\"\r\n                  name=\"firstname\"\r\n                  value={clientInput}\r\n                  placeholder=\"Writing customer...\"\r\n                  disabled\r\n                  onChange={ e => {\r\n                    setClientInput(e.target.value) \r\n                    console.log(e.target.value) \r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-25\">\r\n                <label htmlFor=\"fname\">Status</label>\r\n              </div>\r\n              <div className=\"col-75\">\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"fname\"\r\n                  name=\"firstname\"\r\n                  value=\"Pending\"\r\n                  placeholder=\"Pending\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-25\">\r\n                <label htmlFor=\"fname\">Date</label>\r\n              </div>\r\n              <div className=\"col-75\">\r\n                <Input\r\n                  type=\"date\"\r\n                  id=\"fname\"\r\n                  name=\"firstname\"\r\n                  value={dateInput}\r\n                  disabled\r\n                  placeholder=\"Select to date\"\r\n                  onChange={(e)=>{\r\n                    setDateInput(e.target.value);\r\n                    console.log(order);\r\n                    console.log(moment(new Date(order.date), \"YYYY/MM/DD\").format(\"DD/MM/YYYY\"));\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"containerTable\">\r\n          <UpdateOrderTable productsRows={rows} setRows={setRows} />\r\n        </div>\r\n\r\n        <Dialog fullWidth={true} maxWidth={maxWidth} open={open} onClose={handleClose}>\r\n          <AddProduct setOpen={setOpen}/>\r\n        </Dialog>\r\n\r\n        <div className=\"orderResults\">\r\n          <div className=\"right-button\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add Item\r\n            </button>\r\n          </div>\r\n          <div className=\"detailsResults border-0\">\r\n            <ul className=\"list-group me-5 border-0\">\r\n              <li className=\"list-group-item border-0 fw-bold\">Subtotal</li>\r\n              <li className=\"list-group-item border-0 fw-bold\">Taxes</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total City Tax</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total County Tax</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total State Tax</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total Federal Tax</li>\r\n              <li className=\"list-group-item border-0 fw-bold\">Total Taxes</li>\r\n              <li className=\"list-group-item border-0 fw-bold\">Total</li>\r\n            </ul>\r\n            <ul className=\"list-group ms-5 border-0\">\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"right-button\">\r\n            <button type=\"button\" className=\"px-2 btn btn-success \" onClick={(e) => handleClickComplete()}>\r\n              Complete order\r\n            </button>\r\n            <button type=\"button\" className=\"px-2 btn btn-danger btn-margin\" onClick={(e) => handleClickReject()}>\r\n              Reject order\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateOrder;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport UpdateOrder from \"../UpdateOrder\";\r\n\r\nconst columns = [\r\n  // id, element.client, element.status, element.date, element.taxesAmount\r\n  { id: 'id', label: 'Nro', minWidth: 50 },\r\n  { id: 'client', label: 'Consumer', minWidth: 100 },\r\n  {\r\n    id: 'status',\r\n    label: 'Status',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'date',\r\n    label: 'Date',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'taxesAmount',\r\n    label: 'Total',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: 'orderNumber',\r\n    label: 'Actions',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function TableOrders({ rows, setpageNumber, setOrderSelected }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  // const [rows, setRows] = useState([]);\r\n  // console.log(\"LISTA EN NUEVO COMPONENTE\");\r\n  // console.log(listOrders);\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     setRows(listOrders);\r\n  //   }\r\n  // }, [listOrders])\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleClickEdit = (order) => {\r\n    console.log(\"item click\", order);\r\n    setpageNumber(1);\r\n    setOrderSelected(order);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(rows.length > 0) ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      (column.label === \"Actions\") ?\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          <Button color=\"primary\" onClick={(e) => { handleClickEdit(row) }} >Edit</Button>\r\n                          {/* <UpdateOrder value={column}/> */}\r\n                        </TableCell> :\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                        </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            }) : 'No hay datos'}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst columns = [\r\n  { field: 'numberProduct', headerName: 'Nro.', minWidth: 50 ,width: 100 },\r\n  { field: 'name', headerName: 'Name', minWidth: 100 ,width: 500  },\r\n  { field: `nameCategory`, headerName: 'Category', minWidth: 150 ,width: 600 },\r\n  {\r\n    field: 'priceUnit', headerName: 'Price', minWidth: 80 ,width: 200,// type: 'number', \r\n  },\r\n];\r\n\r\n\r\nexport default function DataTable({ rows, setRowsSelection, rowsSelection }) {\r\n  // const selectionModel = React.useMemo(() => {\r\n  //   return (rows != null && rows.length>0)?rows.filter((r) => r.id < 101).map((r) => r.id): [];\r\n  // }, rows);\r\n  // console.log(\"rowsSelection datatable\",rowsSelection);\r\n  // const selectionModel = [];\r\n  // const selectionModelAux = Rea\r\n\r\n  console.log(rows);\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={(rows != null && rows.length > 0) ? rows : []}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n        disableColumnResize={true}\r\n        checkboxSelection\r\n        selectionModel={rowsSelection}\r\n        onSelectionModelChange={(e) => {\r\n          console.log(e);\r\n          setRowsSelection(e)\r\n          // const selectedIDs = new Set(e.selectionModel);\r\n          // const selectedRowData = rows.filter((r) =>\r\n          //   selectedIDs.has(r.id.toString())\r\n          // );\r\n          // console.log(selectedRowData);\r\n          // console.log(selectionModel);\r\n\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport default function BasicTable({ rowsSelectionAux, setRowsSelectionAux, setRowsSelection, rowsSelection }) {\r\n\r\n  const [quantity, setQuantity] = useState(0)\r\n  const [quantityCost, setQuantityCost] = useState();\r\n  function handleChange(e) {\r\n    setQuantity(e.target.value);\r\n    setQuantityCost(e.target.id)\r\n\r\n    let a = parseInt(e.target.value)\r\n    let b = parseFloat(e.target.id)\r\n\r\n    rowsSelectionAux.forEach((item) => {\r\n      if (item.id.toString() == e.target.name) {\r\n        item.cost = a * b;\r\n        item.amount=e.target.value\r\n      }\r\n    });\r\n    setRowsSelectionAux(rowsSelectionAux)\r\n  }\r\n\r\n  const handleClickDelete = (id) => {\r\n\r\n    console.log('DELETE')\r\n    console.log('rowsSelection', rowsSelection);\r\n    console.log('id', id);\r\n\r\n    let arrayAux = [];\r\n    let arrayAuxCheck = [];\r\n\r\n    rowsSelectionAux.forEach((item) => {\r\n      if (item.id !== id) {\r\n        arrayAux.push(item);\r\n      }\r\n    })\r\n\r\n    rowsSelection.forEach((item, i) => {\r\n      if (item !== id) {\r\n        arrayAuxCheck.push(item);\r\n      }\r\n    })\r\n    setRowsSelection(arrayAuxCheck);\r\n    setRowsSelectionAux(arrayAux);\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell width=\"10%\" >Nro</TableCell>\r\n            <TableCell width=\"40%\" align=\"left\">Name</TableCell>\r\n            <TableCell width=\"15%\" align=\"right\">Quantity</TableCell>\r\n            <TableCell width=\"10%\" align=\"right\">Unit Price</TableCell>\r\n            <TableCell width=\"15%\" align=\"right\">Cost</TableCell>\r\n            <TableCell width=\"10%\" align=\"right\">Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rowsSelectionAux.map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.name}</TableCell>\r\n              <TableCell align=\"right\"><input style={{ width: \"70%\" }} type=\"number\" className=\"input-Quantity\" min=\"1\" step=\"1\"\r\n                value={row.amount} onChange={handleChange} name={row.id} id={row.priceUnit} /></TableCell>\r\n              <TableCell align=\"right\">${row.priceUnit.toFixed(1)}</TableCell>\r\n              <TableCell align=\"right\" >${row.cost.toFixed(1)}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <button className=\"btn btn-link mx-0\" onClick={(e) => handleClickDelete(row.id)} >Delete</button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useMediaQuery, Button } from \"@material-ui/core\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { getProducts, createOrders } from \"../../../hooks/utils\";\r\nimport \"./CreateOrder.scss\";\r\nimport TableProducts from \"../TableProductCheck\";\r\nimport TableProductsFilter from \"../TableProductsFilter\";\r\nimport moment from 'moment';\r\n\r\n// import Table from \"../TableOrders\";\r\n\r\nfunction CreateOrder({ setpageNumber }) {\r\n\r\n  const [clientInput, setClientInput] = useState(\"\");\r\n  const [dateInput, setDateInput] = useState(moment(new Date()).format(\"YYYY-MM-DD\"));\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [rowsSelection, setRowsSelection] = useState([]);\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [rowsSelectionAux, setRowsSelectionAux] = useState([]);\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // setProductSeleccionado(prevState=>({\r\n    //   ...prevState,\r\n    //   [name]: value\r\n    // }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts().then((value) => {\r\n      console.log(\"VALUE PRODUCTS\", value);\r\n      let i = 100;\r\n      value.forEach((element) => {\r\n        // let obj = value;\r\n        element.nameCategory = element.category.name;\r\n        element.numberProduct = i;\r\n        element.id = i;\r\n        element.amount = 1;\r\n        element.cost=element.amount*element.priceUnit;\r\n        i++;\r\n      });\r\n      setRows(value);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"rowsSelection\");\r\n    console.log(rowsSelection);\r\n\r\n    let arrayAux = [];\r\n    setRowsSelectionAux([])\r\n\r\n    rowsSelection.forEach(element => {\r\n      rows.forEach(item => {\r\n        if (item.id == element)\r\n          arrayAux.push(item);\r\n      });\r\n    });\r\n    console.log(\"arrayAux\", arrayAux)\r\n    setRowsSelectionAux(arrayAux)\r\n    console.log(\"use effect\", rowsSelection)\r\n\r\n\r\n  }, [rowsSelection]);\r\n\r\n  const handleClickEdit = () => {\r\n    console.log(\"item click\");\r\n    setpageNumber(0);\r\n  };\r\n  const handleClickComplete = () => {\r\n    let orderSend = new Object();\r\n    orderSend.client = clientInput\r\n    orderSend.date = dateInput\r\n    orderSend.status = 1\r\n    orderSend.amountTotal = 100.0 //subtotal\r\n    orderSend.taxesAmount = 25.0//monto del impuesto\r\n    orderSend.taxesTotal = 125.0 //subtotal mas impuestos\r\n    orderSend.listProducts = rowsSelectionAux\r\n    console.log(orderSend);\r\n    \r\n    createOrders(orderSend).then((value) => {\r\n      console.log(\"Create Order\", value);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-create\">\r\n        <div className=\"titleOrder\">\r\n          <p className=\"h1 h1Title table__title\">Create Order</p>\r\n        </div>\r\n\r\n        <div className=\"left-button\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={(e) => handleClickEdit()}>Back\r\n          </Button>\r\n        </div>\r\n        <div className=\"customerDetails\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-25\">\r\n                <label htmlFor=\"fname\">Customer</label>\r\n              </div>\r\n              <div className=\"col-75\">\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"fname\"\r\n                  name=\"firstname\"\r\n                  value={clientInput}\r\n                  placeholder=\"Writing customer...\"\r\n                  onChange={(e) => {\r\n                    setClientInput(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-25\">\r\n                <label htmlFor=\"fname\">Status</label>\r\n              </div>\r\n              <div className=\"col-75\">\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"fname\"\r\n                  name=\"firstname\"\r\n                  value=\"Pending\"\r\n                  placeholder=\"Pending\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-25\">\r\n                <label htmlFor=\"fname\">Date</label>\r\n              </div>\r\n              <div className=\"col-75\">\r\n                <Input\r\n                  className=\"dateColor\"\r\n                  type=\"date\"\r\n                  id=\"fname\"\r\n                  name=\"firstname\"\r\n                  value={dateInput}\r\n                  placeholder=\"Select to date\"\r\n                  onChange={(e) => {\r\n                    setDateInput(e.target.value);\r\n                    console.log(dateInput);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <TableProductsFilter rowsSelectionAux={rowsSelectionAux} setRowsSelectionAux={setRowsSelectionAux} setRowsSelection={setRowsSelection} rowsSelection={rowsSelection} />\r\n\r\n        <Dialog fullScreen open={open} onClose={handleClose}>\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={handleClose}>\r\n            Back\r\n          </button>\r\n\r\n          <div className=\"containerTable\">\r\n            <TableProducts rows={rows} setRowsSelection={setRowsSelection} rowsSelection={rowsSelection} />\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Dialog>\r\n\r\n        <div className=\"orderResults\">\r\n          <div className=\"right-button\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add Item\r\n            </button>\r\n          </div>\r\n          <div className=\"detailsResults border-0\">\r\n            <ul className=\"list-group me-5 border-0\">\r\n              <li className=\"list-group-item border-0 fw-bold\">Subtotal</li>\r\n              <li className=\"list-group-item border-0 fw-bold\">Taxes</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total City Tax</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total County Tax</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total State Tax</li>\r\n              <li className=\"list-group-item border-0 ms-3\">Total Federal Tax</li>\r\n              <li className=\"list-group-item border-0 fw-bold\">Total Taxes</li>\r\n              <li className=\"list-group-item border-0 fw-bold\">Total</li>\r\n            </ul>\r\n            <ul className=\"list-group ms-5 border-0\">\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n              <li className=\"list-group-item border-0 list-group-item-r\">${ }10.20</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"right-button\">\r\n            <button type=\"button\" className=\"px-2 btn btn-success \" onClick={(e) => handleClickComplete()}>\r\n              {\"Send order\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateOrder;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TableOrder from \"./TableOrders\";\r\nimport CreateOrder from \"./CreateOrder\";\r\nimport UpdateOrder from \"./UpdateOrder\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { Modal, useMediaQuery, Button } from \"@material-ui/core\";\r\nimport api from '../../hooks/utils';\r\nimport { getAllOrders } from \"../../hooks/utils\";\r\nimport \"./Order.scss\";\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Orders = () => {\r\n  const view = React.useState(1);\r\n  const history = useHistory();\r\n\r\n  const [listOrders, setStateListOrder] = useState([])\r\n  const handleSubmit = (data) => {\r\n    getAllOrders().then((response) => {\r\n      setStateListOrder(response)\r\n      console.log(\"Get Orders\", response)\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    handleSubmit();\r\n  }, [])\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const handleClickOpenEdit = () => setOpenEdit(true);\r\n  const handleCloseEdit = () => setOpenEdit(false);\r\n  const [pageNumber, setpageNumber] = useState(0)\r\n  const [orderSelected, setOrderSelected] = useState({})\r\n  useEffect(() => {\r\n    console.log(listOrders);\r\n  }, [])\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n\r\n      {/* <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpenEdit}>Redirect Order</Button> */}\r\n      {(pageNumber == 0) ?\r\n        <>\r\n          <div className=\"table__title\"> Orders </div>\r\n          <div className=\"left-button\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => { setpageNumber(2) }}>Create Order\r\n            </Button>\r\n          </div>\r\n          <TableOrder rows={listOrders} setpageNumber={setpageNumber} setOrderSelected={setOrderSelected}/>\r\n        </> :\r\n        (pageNumber == 1) ? <UpdateOrder order={orderSelected} setpageNumber={setpageNumber} /> : <CreateOrder setpageNumber={setpageNumber} />\r\n      }\r\n\r\n    </>\r\n  );\r\n};\r\nexport default Orders;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Box, Typography, useMediaQuery, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport \"./Orders.scss\";\r\nimport NOrders from \"../../components/NOrders/index\";\r\nimport OrderComponent from \"../../components/Order/index\";\r\n\r\nconst Orders = () => {\r\n  const isMobile = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n\r\n\r\n  \r\n  const [formValues, setFormValues] = useState({\r\n    name1: \"\",\r\n    name2: \"\",\r\n    name3: \"\",\r\n    name4: \"\",\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <OrderComponent />\r\n      {isMobile ? (\r\n        <Box textAlign=\"left\">\r\n          <Button\r\n            component={Link}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            to=\"/Products\"\r\n          >\r\n            <ChevronLeftIcon />\r\n            <Typography variant=\"button\">Products</Typography>\r\n            <PersonIcon style={{ marginLeft: 15 }} />\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Orders;\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  useMediaQuery,\r\n  Button,\r\n  useScrollTrigger,\r\n  Slide,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon\r\n} from \"@material-ui/core\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\n\r\nimport Orders from \"../../view/Orders/index\";\r\nimport Products from \"../../view/Products/index\";\r\n\r\n// LOCAL-STYLING\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children } = props;\r\n  const trigger = useScrollTrigger();\r\n\r\n  return (\r\n    <Slide appear={false} direction={\"down\"} in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [anchor, setAnchor] = React.useState(null);\r\n  const open = Boolean(anchor);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const handleMenu = (event) => {\r\n    setAnchor(event.currentTarget);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <HideOnScroll {...props}>\r\n        <BrowserRouter basename=\"/prueba-crud\">\r\n          <AppBar>\r\n            <Toolbar>\r\n              <Typography\r\n                variant=\"h5\"\r\n                component=\"p\"\r\n                color=\"textSecondary\"\r\n                className={classes.title}\r\n              >\r\n                BLAZE\r\n              </Typography>\r\n              {isMobile ? (\r\n                <>\r\n                  <IconButton\r\n                    color=\"textPrimary\"\r\n                    className={classes.menuButton}\r\n                    edge=\"start\"\r\n                    aria-label=\"menu\"\r\n                    onClick={handleMenu}\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchor}\r\n                    anchorOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"right\"\r\n                    }}\r\n                    KeepMounted\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"right\"\r\n                    }}\r\n                    open={open}\r\n                  >\r\n                    <MenuItem\r\n                      onClick={() => setAnchor(null)}\r\n                      component={Link}\r\n                      to=\"/Orders\r\n                      \"\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PersonIcon />\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"h6\"> Orders\r\n                      </Typography>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={() => setAnchor(null)}\r\n                      component={Link}\r\n                      to=\"/Products\"\r\n                    >\r\n                      <ListItemIcon>\r\n                        <BookmarksIcon />\r\n                      </ListItemIcon>\r\n                      <Typography variant=\"h6\"> Products </Typography>\r\n                    </MenuItem>\r\n                  </Menu>\r\n                </>\r\n              ) : (\r\n                <div style={{ marginRight: \"2rem\" }}>\r\n                  <Button\r\n                    variant=\"text\"\r\n                    component={Link}\r\n                    to=\"/Orders\"\r\n                    color=\"default\"\r\n                  >\r\n                    <PersonIcon />\r\n                    Orders\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"text\"\r\n                    component={Link}\r\n                    to=\"/Products\"\r\n                    color=\"default\"\r\n                  >\r\n                    <BookmarksIcon />\r\n                    Products\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Switch>\r\n            {/* <Route exact path=\"/College\" component={College} /> */}\r\n            <Route exact path={[\"/\", \"/Orders\"]} component={Orders} />\r\n            {/* <Route exact path=\"/Orders\" component={Orders} /> */}\r\n            <Route exact path=\"/Products\" component={Products} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </HideOnScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import Productos from '../../view/Products';\nimport Header from \"../Header/index\";\n// import \"fontsource-roboto\";\nimport { Paper, Container } from \"@material-ui/core\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\nimport './App.scss';\n\n\nfunction App() {\n\n  const theme = createMuiTheme({\n    typography: {\n      h1: {\n      /* this will change the font size for h1, we can also do \n          it for others, */\n        fontSize: \"3rem\",\n      },\n    },\n    palette: {\n      /* this is used to turn the background dark, but we have \n          to use Paper for this inOrder to use it. */\n      type: \"light\",\n      primary: {\n       // main: colorName[hue],\n       // we have to import the color first to use it\n        main: '#0178fd',\n      //   main: grey[500],\n      },\n      secondary: {\n        main: '#c0c0c0',\n      },\n      background: {\n        paper: {\n          main: \"#ffffff\"\n        }\n      }\n    },\n  });\n\n  return (\n    \n    <ThemeProvider theme={theme}>\n      <Paper style={{ height: \"200vh\" }}>\n        <Container>\n          <Header />\n        </Container>\n      </Paper>\n    </ThemeProvider>\n    \n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <p>lorem ipsum</p>\n\n    //     <Productos />\n\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/global.scss';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}